# i3 config file (v4)
set $mod Mod4

for_window [class=".*"] border pixel 1

gaps outer 0
gaps inner 15
gaps top 25
gaps bottom 20

# Font
font pango:Iosevka 9
# variables
set $TERMINAL kitty
## Theme
set $fg __[fg]__
set $bg __[bg]__
set $ac __[cursor]__
set $red __[red]__
set $green __[green]__
set $yellow __[yellow]__

# class                 border  backgr. text    indicator child_border
client.focused          $bg     $bg     $fg     $bg       $bg
client.focused_inactive $bg     $bg     $fg     $bg       $bg
client.unfocused        $bg     $bg     $fg     $bg       $bg
client.urgent           $red    $red    $fg     $red      $red
client.placeholder      $bg     $bg     $fg     $bg       $bg

client.background       $bg

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

bindsym Shift+Print exec --no-startup-id $HOME/.dotfiles/bin/screenshot.sh
bindsym Print exec --no-startup-id $HOME/.dotfiles/bin/screenshot-full.sh

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id "rofi -modi drun,run -show drun"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

bindsym $mod+Shift+m exec rofi-autorandr

bindsym $mod+b exec firefox
# assign <criteria> [→] [workspace] [number] <workspace>

assign [class="kitty"] → $ws1
assign [class="alacritty"] → $ws1

assign [class="firefox"] → $ws2

assign [class="Org.gnome.Nautilus"] → $ws6

assign [class="Code"] → $ws3
assign [class="neovide"] → $ws3
assign [class="eDEX-UI"] → $ws3

assign [class="mpv"] → $ws4

assign [class="lunarclient"] → $ws5

assign [class="discord"] → $ws7
assign [class="Caprine"] → $ws7

assign [class="Deezer"] → $ws8
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
workspace $ws1 output __[main_monitor]__
workspace $ws2 output __[main_monitor]__
workspace $ws3 output __[main_monitor]__
workspace $ws4 output __[main_monitor]__
workspace $ws5 output __[main_monitor]__

workspace $ws6 output __[second_monitor]__
workspace $ws7 output __[second_monitor]__
workspace $ws8 output __[second_monitor]__
workspace $ws9 output __[second_monitor]__
workspace $ws10 output __[second_monitor]__

bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec $HOME/.dotfiles/bin/exit-i3.sh

# autostart
# =========
exec --no-startup-id $HOME/.dotfiles/bin/screenlayout.sh
exec --no-startup-id picom -b
exec --no-startup-id "wal -i ~/.dotfiles/autumn/wall/autumn-dreams-wallpaper.png -q"
exec_always --no-startup-id "~/.fehbg"
exec --no-startup-id emote
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id $HOME/.dotfiles/bin/autolock.sh
exec --no-startup-id $HOME/.dotfiles/bin/keyring.sh
exec --no-startup-id blueman-applet
exec --no-startup-id deezer
